rules_version = '2';
service cloud.firestore {
	match /databases/{database}/documents {

		// ANYONE can read user=anonymous items
		// admin can read/write user=anonymous items
		// logged in <user> can read/write user=<user> items
		// - logged in <user> must be in 'users' collection
		// - for read/delete, check user in existing item
		// - for create, check user in new item
		// - for update, check user in new AND existing items

		match /{document=**} {
			allow read: if (resource.data.user == "anonymous") ||
						   (request.auth.uid == resource.data.user && 
							exists(/databases/$(database)/documents/users/$(request.auth.uid)));
			allow delete: if (request.auth.uid == "y2swh7JY2ScO5soV7mJMHVltAOX2" &&
							  resource.data.user == "anonymous") ||
							 (request.auth.uid == resource.data.user && 
							  exists(/databases/$(database)/documents/users/$(request.auth.uid)));
			allow create: if (request.auth.uid == "y2swh7JY2ScO5soV7mJMHVltAOX2" && 
							  request.resource.data.user == "anonymous") || 
							 (request.auth.uid == request.resource.data.user && 
							  exists(/databases/$(database)/documents/users/$(request.auth.uid)));
			allow update: if (request.auth.uid == "y2swh7JY2ScO5soV7mJMHVltAOX2" && 
							  request.resource.data.user == "anonymous" &&
							  resource.data.user == "anonymous") || 
							 (request.auth.uid == request.resource.data.user &&
							  request.auth.uid == resource.data.user && 
							  exists(/databases/$(database)/documents/users/$(request.auth.uid)));
	  	}
	}
}